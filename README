
retroleap is a replacement firmware for Leapfrog devices (currently for the LeapsterGS only), that combines retroarch, ARM-optimized emulator cores, and a buildroot root filesystem.

You can easily download and install retroleap on your leapsterGS system! To do this, follow the instructions below on your Linux machine.

-------------------------------------------------------------------------------

Installing:

1. Install the necessary dependencies:

On ubuntu/debian/etc: sudo apt install sg3-utils git python

2. Clone sshflash:

git clone https://github.com/mac2612/sshflash.git
cd sshflash

3. Download the latest release .tar.gz file at:

https://github.com/mac2612/retroleap/releases

4. Extract the release file into the sshflash directory. You should now have the uImage, rootfs.ubifs, and surgeon_zImage files in your sshflash directory.

5. Plug your Leapster into a USB port on your PC. Turn it on while holding the L and R shoulder buttons. Yous hould see an image of a leapster connected to a PC on the leapster's screen.

6. Run sshflash:

./remote_flash.sh

7. Wait for sshflash to do its thing.

8. If all goes well, your leapfrog device should reboot into retroarch!

9. These instructions have been tested on Ubuntu 18.04 and 18.10. If you run into trouble, please open a bug!


Adding ROMs:

When you attach a booted leapster device running retroleap, it will show up as a network interface.
Retroleap will give your PC an IP on this interface in the 169.254.6.X space. The leapster is accessible on 169.254.6.1, using the private key supplied with sshflash.

To add ROMs, create the directory structure that you prefer using SSH - it should be within /roms in order to get full use of the flash memory in the device.

Then, use scp to move ROMs into the directory you just made.

For example:

ssh -i ~/sshflash/keys/id_rsa root@169.254.6.1 'mkdir /roms/nes'
scp -i ~/sshflash/keys/id_rsa /home/foobar/my_awesome_homebrew.nes root@169.254.6.1:/roms/nes

You can use df -h to see how much space you have available:

ssh -i ~/sshflash/keys/id_rsa root@169.254.6.1 'df -h /roms'


Emergency:
If you're stuck and your device is in a weird state, you can always go back to the stock leapster OS by booting your device in Surgeon mode (hold L + R shoulder buttons while powering up), and connecting to the Leapfrog Connect app. This will allow you to restore the stock leapster OS on the device.

Additionally, you can get serial access to the device either via the cartridge port, or via a header on the inside of the device.

Retroleap does not replace the stock bootloader, so unless something really nasty happens, you should be safe from bricking your device.


Doing your own build:

To do a build, clone the source tree with git.
Then do this:

make leapstergs_defconfig
make menuconfig (change whatever you want to change here - adding cores, etc.)
make
cp output/images/* ~/sshflash/ (equivalent for your system/location of SSHflash).


Wishlist/planned features:
-More cores to support additional systems.
-Support for more leapster devices e.g. leapster explorer, didj(?), leappad and leappad2, leappad3 and platinum.
-Overclocking support.
-Menuing other than the retroarch rgui menuing system.


If you'd like to get involved with this project, please get in touch! New contributors are always welcome :)
